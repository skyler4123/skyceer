<div class="w-full">
  <% if notice.present? %>
    <p class="py-2 px-3 bg-green-50 mb-5 text-green-500 font-medium rounded-lg inline-block" id="notice"><%= notice %></p>
  <% end %>

  <div class="flex justify-between items-center">
    <h1 class="font-bold text-4xl">Components</h1>
  </div>

  <div id="components" class="flex flex-col justify-center items-center min-w-full pb-4">

    <%= render(Hr::DefaultComponent.new) %>

    <%= render(Hr::TextComponent.new(label: "ToggleComponent")) %>
    <% toggle_event_id = 'test_toggle' %>
    <%= render(ButtonComponent.new(event: { id: toggle_event_id, listener: :hover, action: :toggle })) %>
    <%= render(ButtonComponent.new(event: { id: toggle_event_id, listener: :click, action: :toggle })) %>
    <%= render(ToggleComponent.new(event: { id: toggle_event_id })) do %>
      <div>Test Toggle Component</div>
    <% end %>
    <%= render(ToggleComponent.new(event_id: toggle_event_id, toggle_direction: :horizontal)) do %>
      <div class="text-nowrap overflow-auto">New Yorkers are facing the winter chill with less warmth this year as the city's most revered soup stand unexpectedly shutters, following a series of events that have left the community puzzled.</div>
    <% end %>
    <%= render(IconComponent.new(name: "code-bracket")) %>

    <%= render(Hr::TextComponent.new(label: "Tab::DefaultComponent")) %>
    <%= render(Tab::DefaultComponent.new) do |c| %>
      <% c.with_headers do %>
        <div>Header 1</div>
        <div>Header 2</div>
        <div>Header 3</div>
        <div>Header 4</div>
      <% end %>
      <% c.with_bodies do %>
        <div>Body 1</div>
        <div>Body 2</div>
        <div>Body 3</div>
        <div>Body 4</div>
      <% end %>
    <% end %>
    <%= render(IconComponent.new(name: "code-bracket")) %>

    <%= render(Hr::TextComponent.new(label: "Table::DemoComponent")) %>
    <%= render(Table::DemoComponent.new) %>

    <%= render(Hr::TextComponent.new(label: "Popover::DefaultComponent")) %>
    <% popover_event_id = SecureRandom.uuid %>
    <%= render(ButtonComponent.new(event: { action: :toggle, listener: :hover, id: popover_event_id })) do |c| %>
      <% c.with_hidden do %>
        <%= render(PopoverComponent.new(position: :right_center, event: { id: popover_event_id })) %>
      <% end %>
    <% end %>

    <%= render(Hr::TextComponent.new(label: "Modal::DefaultComponent")) %>
    <% modal_event_id = SecureRandom.uuid %>
    <%= render(ButtonComponent.new(label: 'Test Modal', event: { id: modal_event_id, action: :toggle, listener: :click })) %>
    <%= render(ModalComponent.new(event: { id: modal_event_id, action: :toggle, listener: :click })) do %>
      <div>Executing JavaScript from a string is an BIG security risk.
        With eval(), malicious code can run inside your application without permission.
        With eval(), third-party code can see the scope of your application, which can lead to possible attacks.
      </div>
    <% end %>



    <%= render(Hr::TextComponent.new(label: "SwitchComponent")) %>
    <% switch_event_id = SecureRandom.uuid %>
    <%= render(SwitchComponent.new(event: { listener: :click, action: :switch, id: switch_event_id })) do |c| %>
      <% c.with_switch do %>
        <%= render(IconComponent.new(name: "link")) %>
      <% end %>
      <% c.with_switch do %>
        <%= render(IconComponent.new(name: "check-circle", svg_class: "w-5 h-6 text-green-500")) %>
      <% end %>
      <% c.with_switch do %>
        <%= render(IconComponent.new(name: "spinner", type: :animation)) %>
      <% end %>
      <% c.with_switch do %>
        <%= render(IconComponent.new(name: "star", svg_class: "w-5 h-6 text-sky-800")) %>
      <% end %>
      <% c.with_switch do %>
        <%= render(IconComponent.new(name: "sun", svg_class: "w-5 h-6 text-yellow-500")) %>
      <% end %>
    <% end %>
    <%= render(ButtonComponent.new(event: { listener: :click, action: :switch, id: switch_event_id })) %>

    <%= render(Hr::TextComponent.new(label: "TabComponent")) %>
    <% tab_event_id = SecureRandom.uuid %>
    <%= render(ButtonComponent.new(event: { listener: :click, action: :tab, id: tab_event_id, value: 0 })) %>
    <%= render(ButtonComponent.new(event: { listener: :click, action: :tab, id: tab_event_id, value: 1 })) %>
    <%= render(ButtonComponent.new(event: { listener: :click, action: :tab, id: tab_event_id, value: 2 })) %>
    <%= render(ButtonComponent.new(event: { listener: :click, action: :tab, id: tab_event_id, value: 3 })) %>
    <%= render(TabComponent.new(event: { id: tab_event_id })) do |c| %>
      <% c.with_tab do %>
        <%= render(IconComponent.new(name: "link")) %>
      <% end %>
      <% c.with_tab do %>
        <%= render(IconComponent.new(name: "check-circle", svg_class: "w-5 h-6 text-green-500")) %>
      <% end %>
      <% c.with_tab do %>
        <%= render(IconComponent.new(name: "spinner", type: :animation)) %>
      <% end %>
      <% c.with_tab do %>
        <%= render(IconComponent.new(name: "star", svg_class: "w-5 h-6 text-sky-800")) %>
      <% end %>
      <% c.with_tab do %>
        <%= render(IconComponent.new(name: "sun", svg_class: "w-5 h-6 text-yellow-500")) %>
      <% end %>
    <% end %>


    <%= render(Hr::TextComponent.new(label: "ToastComponent")) %>
    <% toast_event_id = SecureRandom.uuid %>
    <%= render(ButtonComponent.new(label: 'Toggle Toast', event: { id: toast_event_id, action: :toggle, listener: :click })) %>
    <%= render(ToastComponent.new(event: { id: toast_event_id })) do %>
      <div>Executing JavaScript from a string is an BIG security risk.
        With eval(), malicious code can run inside your application without permission.
        With eval(), third-party code can see the scope of your application, which can lead to possible attacks.
      </div>
    <% end %>

    <%= render(Hr::TextComponent.new(label: "ListComponent")) %>
    <%= render(ListComponent.new) do %>
      <li>Coffee</li>
      <li>Tea</li>
      <li>Milk</li>
    <% end %>

    <%= render(Hr::TextComponent.new(label: "InputComponent")) %>
    <%= render(InputComponent.new(format_options: { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] })) do |c| %>
      <% c.with_prepend do %>
        <%= render(IconComponent.new) %>
      <% end %>
      <% c.with_append do %>
        <%= render(IconComponent.new) %>
      <% end %>
    <% end %>
    <%= render(InputComponent.new(format_options: {     time: true,
        timePattern: ['h', 'm', 's'] })) do |c| %>
      <% c.with_prepend do %>
        <%= render(IconComponent.new(name: 'star')) %>
      <% end %>
      <% c.with_append do %>
        <%= render(IconComponent.new(name: 'moon')) %>
      <% end %>
    <% end %>

    <%= render(Hr::TextComponent.new(label: "Input with CleaveJS")) %>
    <%= render(InputComponent.new(type: :text, format_options: {
      date: true,
      delimiter: '-',
      datePattern: ['Y', 'm', 'd']
    })) %>

    <%= render(Hr::TextComponent.new(label: "Input with FlatpickJS")) %>
    <%= render(InputComponent.new(type: :date, format_options: {
      mode: "range",
      dateFormat: "Y-m-d",
    })) %>

    <%= render(Hr::TextComponent.new(label: "Boxchat")) %>
    <%= render(Boxchat::SampleComponent.new) %>
  </div>
</div>
